{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chiho\\\\Desktop\\\\test\\\\movie_site\\\\frontend\\\\src\\\\commons\\\\Login.js\";\n/**\r\n * 주소 : /commons/Login.js\r\n * 설명 : 로그인 페이지\r\n * 작성자 : \r\n * 작성일 : \r\n * 수정일 : \r\n * 기능 : 사용자가 로그인할 수 있는 페이지\r\n *      - 아이디와 비밀번호를 입력받아 로그인 요청을 보냄\r\n *      - 로그인 성공 시 메인 페이지로 이동\r\n *      - 아이디 textarea : 아이디 입력칸\r\n *      - 비밀번호 textarea : 비밀번호 입력칸, 입력 시 비밀번호 보이기/숨기기 기능\r\n *      - 로그인 버튼 : 클릭 시 로그인 요청 -> 로그인 성공시 메인 페이지\r\n * 백 요청 : /api/login\r\n *      - 로그인 요청 및 성공 여부를 반환\r\n *      - 성공 시 JWT 토큰을 반환\r\n */\n\nimport React from \"react\";\nimport Header from \"../components/Header\";\nimport Login from \"../components/Login\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LoginPage({\n  onLoginSuccess,\n  isLoggedIn,\n  user\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      isLoggedIn: isLoggedIn,\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Login, {\n      onLoginSuccess: onLoginSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","Header","Login","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginPage","onLoginSuccess","isLoggedIn","user","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/chiho/Desktop/test/movie_site/frontend/src/commons/Login.js"],"sourcesContent":["/**\r\n * 주소 : /commons/Login.js\r\n * 설명 : 로그인 페이지\r\n * 작성자 : \r\n * 작성일 : \r\n * 수정일 : \r\n * 기능 : 사용자가 로그인할 수 있는 페이지\r\n *      - 아이디와 비밀번호를 입력받아 로그인 요청을 보냄\r\n *      - 로그인 성공 시 메인 페이지로 이동\r\n *      - 아이디 textarea : 아이디 입력칸\r\n *      - 비밀번호 textarea : 비밀번호 입력칸, 입력 시 비밀번호 보이기/숨기기 기능\r\n *      - 로그인 버튼 : 클릭 시 로그인 요청 -> 로그인 성공시 메인 페이지\r\n * 백 요청 : /api/login\r\n *      - 로그인 요청 및 성공 여부를 반환\r\n *      - 성공 시 JWT 토큰을 반환\r\n */\r\n\r\nimport React from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport Login from \"../components/Login\";\r\n\r\nfunction LoginPage({ onLoginSuccess, isLoggedIn, user }) {\r\n  return (\r\n    <>\r\n      <Header isLoggedIn={isLoggedIn} user={user} />\r\n      <Login onLoginSuccess={onLoginSuccess} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,KAAK,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,SAASC,SAASA,CAAC;EAAEC,cAAc;EAAEC,UAAU;EAAEC;AAAK,CAAC,EAAE;EACvD,oBACEN,OAAA,CAAAE,SAAA;IAAAK,QAAA,gBACEP,OAAA,CAACH,MAAM;MAACQ,UAAU,EAAEA,UAAW;MAACC,IAAI,EAAEA;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9CX,OAAA,CAACF,KAAK;MAACM,cAAc,EAAEA;IAAe;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACzC,CAAC;AAEP;AAACC,EAAA,GAPQT,SAAS;AASlB,eAAeA,SAAS;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}