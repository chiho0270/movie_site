{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chiho\\\\Desktop\\\\test\\\\movie_site\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport MainPage from \"./commons/Main\";\nimport LoginPage from \"./commons/Login\";\nimport RegisterPage from \"./commons/Register\";\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [user, setUser] = useState(null);\n\n  // 로그인 상태 복원\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const decoded = jwtDecode(token);\n        setIsLoggedIn(true);\n        setUser({\n          username: decoded.username,\n          userId: decoded.userId\n        });\n      } catch (e) {\n        setIsLoggedIn(false);\n        setUser(null);\n        localStorage.removeItem('token');\n      }\n    } else {\n      setIsLoggedIn(false);\n      setUser(null);\n    }\n  }, []);\n\n  // 로그인 성공 시 호출\n  const handleLoginSuccess = token => {\n    localStorage.setItem('token', token);\n    try {\n      const decoded = jwtDecode(token);\n      setIsLoggedIn(true);\n      setUser({\n        username: decoded.username,\n        userId: decoded.userId\n      });\n    } catch (e) {\n      setIsLoggedIn(false);\n      setUser(null);\n    }\n  };\n\n  // 로그아웃\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setIsLoggedIn(false);\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(MainPage, {\n          isLoggedIn: isLoggedIn,\n          user: user,\n          onLogout: handleLogout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(LoginPage, {\n          onLoginSuccess: handleLoginSuccess,\n          isLoggedIn: isLoggedIn,\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(RegisterPage, {\n          isLoggedIn: isLoggedIn,\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Ki3p4Ug0OIeovJYgYQgFusbAAO4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","MainPage","LoginPage","RegisterPage","jwtDecode","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","user","setUser","token","localStorage","getItem","decoded","username","userId","e","removeItem","handleLoginSuccess","setItem","handleLogout","children","path","element","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","onLoginSuccess","_c","$RefreshReg$"],"sources":["C:/Users/chiho/Desktop/test/movie_site/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport MainPage from \"./commons/Main\";\r\nimport LoginPage from \"./commons/Login\";\r\nimport RegisterPage from \"./commons/Register\";\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nfunction App() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n\r\n  // 로그인 상태 복원\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      try {\r\n        const decoded = jwtDecode(token);\r\n        setIsLoggedIn(true);\r\n        setUser({ username: decoded.username, userId: decoded.userId });\r\n      } catch (e) {\r\n        setIsLoggedIn(false);\r\n        setUser(null);\r\n        localStorage.removeItem('token');\r\n      }\r\n    } else {\r\n      setIsLoggedIn(false);\r\n      setUser(null);\r\n    }\r\n  }, []);\r\n\r\n  // 로그인 성공 시 호출\r\n  const handleLoginSuccess = (token) => {\r\n    localStorage.setItem('token', token);\r\n    try {\r\n      const decoded = jwtDecode(token);\r\n      setIsLoggedIn(true);\r\n      setUser({ username: decoded.username, userId: decoded.userId });\r\n    } catch (e) {\r\n      setIsLoggedIn(false);\r\n      setUser(null);\r\n    }\r\n  };\r\n\r\n  // 로그아웃\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token');\r\n    setIsLoggedIn(false);\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route path=\"/\" element={<MainPage isLoggedIn={isLoggedIn} user={user} onLogout={handleLogout} />} />\r\n        <Route path=\"/login\" element={<LoginPage onLoginSuccess={handleLoginSuccess} isLoggedIn={isLoggedIn} user={user} />} />\r\n        <Route path=\"/register\" element={<RegisterPage isLoggedIn={isLoggedIn} user={user} />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}